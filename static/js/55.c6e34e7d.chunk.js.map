{"version":3,"file":"static/js/55.c6e34e7d.chunk.js","mappings":"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","sources":["data/stats/site.js","components/Stats/Site.js","components/Stats/TableRow.js","components/Stats/Table.js","pages/Blog.js","data/stats/personal.js","components/Stats/Personal.js"],"sourcesContent":["import dayjs from 'dayjs';\r\n\r\n/* Keys match keys returned by the github api. Fields without keys are\r\n * mostly jokes. To see everything returned by the github api, run:\r\n curl https://api.github.com/repos/mldangelo/personal-site\r\n */\r\nconst data = [\r\n  {\r\n    label: 'Stars this repository has on github',\r\n    key: 'stargazers_count',\r\n    link: 'https://github.com/oladelemi/oladelemi/stargazers',\r\n  },\r\n  {\r\n    label: 'Number of people watching this repository',\r\n    key: 'subscribers_count',\r\n    link: 'https://github.com/oladelemi/oladelemi/stargazers',\r\n  },\r\n  {\r\n    label: 'Number of forks',\r\n    key: 'forks',\r\n    link: 'https://github.com/oladelemi/oladelemi/network',\r\n  },\r\n  {\r\n    label: 'Number of spoons',\r\n    value: '0',\r\n  },\r\n  {\r\n    label: 'Number of linter warnings',\r\n    value: '0', // enforced via github workflow\r\n  },\r\n  {\r\n    label: 'Open github issues',\r\n    key: 'open_issues_count',\r\n    link: 'https://github.com/oladelemi/oladelemi/issues',\r\n  },\r\n  {\r\n    label: 'Last updated at',\r\n    key: 'pushed_at',\r\n    link: 'https://github.com/oladelemi/oladelemi/commits',\r\n    format: (x) => dayjs(x).format('MMMM DD, YYYY'),\r\n  },\r\n  {\r\n    // TODO update this with a pre-commit hook\r\n    /* find . | grep \".js\" | grep -vE \".min.js|node_modules|.git|.json\" |\r\n    xargs -I file cat file | wc -l */\r\n    label: 'Lines of Javascript powering this website',\r\n    value: '2150',\r\n    link: 'https://github.com/oladelemi/oladelemi/graphs/contributors',\r\n  },\r\n];\r\n\r\nexport default data;\r\n","import React, { useState, useCallback, useEffect } from 'react';\r\n\r\nimport Table from './Table';\r\nimport initialData from '../../data/stats/site';\r\n\r\nconst Stats = () => {\r\n  const [data, setResponseData] = useState(initialData);\r\n  // TODO think about persisting this somewhere\r\n  const fetchData = useCallback(async () => {\r\n    // request must be authenticated if private\r\n    const res = await fetch(\r\n      'https://api.github.com/repos/oladelemi/oladelemi',\r\n    );\r\n    const resData = await res.json();\r\n    setResponseData(\r\n      initialData.map((field) => ({\r\n        ...field,\r\n        // update value if value was returned by call to github\r\n        value: Object.keys(resData).includes(field.key)\r\n          ? resData[field.key]\r\n          : field.value,\r\n      })),\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  return (\r\n    <div>\r\n      <h3>Some stats about this site</h3>\r\n      <Table data={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TableRow = ({\r\n  label, link, value, format,\r\n}) => (\r\n  <tr>\r\n    <td width=\"70%\">{label}</td>\r\n    <td>{link ? <a href={link}>{format(value)}</a> : format(value)}</td>\r\n  </tr>\r\n);\r\n\r\nTableRow.propTypes = {\r\n  format: PropTypes.func,\r\n  label: PropTypes.string.isRequired,\r\n  link: PropTypes.string,\r\n  value: PropTypes.oneOfType([\r\n    PropTypes.element,\r\n    PropTypes.number,\r\n    PropTypes.string,\r\n  ]),\r\n};\r\n\r\nTableRow.defaultProps = {\r\n  format: (x) => x,\r\n  link: null,\r\n  value: null,\r\n};\r\n\r\nexport default TableRow;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TableRow from './TableRow';\r\n\r\nconst Table = ({ data }) => (\r\n  <table>\r\n    <tbody>\r\n      {data.map((pair) => (\r\n        <TableRow\r\n          format={pair.format}\r\n          key={pair.label}\r\n          label={pair.label}\r\n          link={pair.link}\r\n          value={pair.value}\r\n        />\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTable.propTypes = {\r\n  data: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      format: PropTypes.func,\r\n      label: PropTypes.string.isRequired,\r\n      link: PropTypes.string,\r\n      value: PropTypes.oneOfType([\r\n        PropTypes.element,\r\n        PropTypes.number,\r\n        PropTypes.string,\r\n      ]),\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default Table;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Main from '../layouts/Main';\r\n\r\nimport Personal from '../components/Stats/Personal';\r\nimport Site from '../components/Stats/Site';\r\n\r\nconst Blog = () => (\r\n  <Main\r\n    title=\"Stats\"\r\n    description=\"Some statistics about Teef and this webpage\"\r\n  >\r\n    <article className=\"post\" id=\"blog\">\r\n      <header>\r\n        <div className=\"title\">\r\n          <h2>\r\n            <Link to=\"/Blog\">Blog</Link>\r\n          </h2>\r\n        </div>\r\n      </header>\r\n      <Personal />\r\n      <Site />\r\n    </article>\r\n  </Main>\r\n);\r\n\r\nexport default Blog;\r\n","// import React, { useState, useEffect } from 'react';\r\n// import React from 'react';\r\n\r\n// const Age = () => {\r\n//   const [age, setAge] = useState();\r\n\r\n//   const tick = () => {\r\n//     const divisor = 1000 * 60 * 60 * 24 * 365.2421897; // ms in an average year\r\n//     const birthTime = new Date('1990-02-05T09:24:00');\r\n//     setAge(((Date.now() - birthTime) / divisor).toFixed(11));\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     const timer = setInterval(() => tick(), 25);\r\n//     return () => {\r\n//       clearInterval(timer);\r\n//     };\r\n//   }, []);\r\n//   return <>{age}</>;\r\n// };\r\n\r\nconst data = [\r\n  // {\r\n  //   key: 'age',\r\n  //   label: 'Current age',\r\n  //   value: <Age />,\r\n  // },\r\n  {\r\n    key: 'US States',\r\n    label: 'US States visited',\r\n    value: 29,\r\n    link: 'https://www.google.com/maps/d/u/0/edit?mid=1JFtnwx2Xmn0LXwSrUZsrqUnDvbCHmRI&ll=11.035647892249699%2C-34.1170242&z=3',\r\n  },\r\n  {\r\n    key: 'countries',\r\n    label: 'Countries visited',\r\n    value: 9,\r\n    link: 'https://www.google.com/maps/d/u/0/edit?mid=1JFtnwx2Xmn0LXwSrUZsrqUnDvbCHmRI&ll=11.035647892249699%2C-34.1170242&z=3',\r\n  },\r\n  {\r\n    key: 'location',\r\n    label: 'Current city',\r\n    value: 'Los Angeles, CA',\r\n  },\r\n];\r\n\r\nexport default data;\r\n","import React from 'react';\r\nimport Table from './Table';\r\nimport data from '../../data/stats/personal';\r\n\r\nconst PersonalStats = () => (\r\n  <>\r\n    <h3>Some fun stats</h3>\r\n    <Table data={data} />\r\n  </>\r\n);\r\n\r\nexport default PersonalStats;\r\n"],"names":["label","key","link","value","format","x","dayjs","_useState","useState","initialData","_useState2","_slicedToArray","data","setResponseData","fetchData","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","resData","wrap","_context","prev","next","fetch","sent","json","map","field","_objectSpread","Object","keys","includes","stop","useEffect","_jsxs","children","_jsx","Table","TableRow","_ref","width","href","defaultProps","pair","Main","title","description","className","id","Link","to","Personal","Site","_Fragment"],"sourceRoot":""}